generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  // Defaults
  id        String   @id @unique @default(uuid()) // or cuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Fields
  firebaseId String @unique
  email      String @unique

  // Relationships
  artworks Artwork[]
  likes    Like[]
}

model Artwork {
  // Defaults
  id        String   @id @unique @default(uuid()) // or cuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Fields
  xVelocity        Int     @default(2)
  yVelocity        Int     @default(2)
  ballSize         Int     @default(30)
  ballColor        Int     @default(0)
  backgroundColor  Int     @default(360)
  ballCount        Int     @default(1)
  randomnessFactor Int     @default(1)
  randomColors     Boolean @default(false)
  borderRadius     Int     @default(50)
  borderWidth      Int     @default(0)
  borderColor      Int     @default(360)

  // Relationships
  user   User   @relation(fields: [userId], references: [id])
  userId String
  likes  Like[]
}

model Like {
  // Defaults
  id        String   @id @unique @default(uuid()) // or cuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  artwork   Artwork @relation(fields: [artworkId], references: [id])
  artworkId String

  @@unique([userId, artworkId])
}
